{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Udemy\\\\Movie_Extractor\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(null); //Using promises\n  // const fetchMovieHandler = () => {\n  //   fetch(\"https://swapi.dev/api/films/\")\n  //     .then((response) => {\n  //       return response.json(); //This line trandform the json into javascript object\n  //     })\n  //     .then((data) => {\n  //       const transformedData = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovie(transformedData);\n  //     });\n  // };\n  //Using asynchronous\n\n  const fetchMovieHandler = useCallback(async () => {\n    setIsError(null);\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      const response2 = await fetch(\"https://movie-adder-http-default-rtdb.firebaseio.com/movies.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went Wrong!!\");\n      }\n\n      const data = await response.json(); //This line trandform the json into javascript object\n\n      const data2 = await response2.json(); //This line trandform the json into javascript object\n\n      const loadedMovies = [];\n      const transformedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovie(transformedData);\n    } catch (error) {\n      setIsError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler]);\n\n  const addMovieHandler = async movie => {\n    const response = await fetch(\"https://movie-adder-http-default-rtdb.firebaseio.com/movies.json\", {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'al=pplication/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), !isLoading && isError && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 35\n    }\n  }, isError)));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovie","isLoading","setIsLoading","isError","setIsError","fetchMovieHandler","response","fetch","response2","ok","Error","data","json","data2","loadedMovies","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","error","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log"],"sources":["F:/React Udemy/Movie_Extractor/src/App.js"],"sourcesContent":["import React, { useState,useEffect,useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(null);\n\n  //Using promises\n  // const fetchMovieHandler = () => {\n  //   fetch(\"https://swapi.dev/api/films/\")\n  //     .then((response) => {\n  //       return response.json(); //This line trandform the json into javascript object\n  //     })\n  //     .then((data) => {\n  //       const transformedData = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovie(transformedData);\n  //     });\n  // };\n\n  //Using asynchronous\n\n  \n const fetchMovieHandler=useCallback( async() =>{\n    setIsError(null);\n    setIsLoading(true);\n    try {\n      \n      \n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      const response2=await fetch(\"https://movie-adder-http-default-rtdb.firebaseio.com/movies.json\")\n     \n      if(!response.ok){\n        throw new Error(\"Something went Wrong!!\");\n      }\n      const data = await response.json(); //This line trandform the json into javascript object\n      const data2 = await response2.json(); //This line trandform the json into javascript object\n\n      const loadedMovies=[];\n      \n\n      \n\n      const transformedData = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovie(transformedData);\n      \n    } catch (error) {\n      setIsError(error.message);\n    }\n    setIsLoading(false);\n  },[]);\n  useEffect(()=>{\n    fetchMovieHandler();\n    \n  },[fetchMovieHandler]);\n\n  const addMovieHandler= async (movie)=>{\n    const response=await fetch(\"https://movie-adder-http-default-rtdb.firebaseio.com/movies.json\",{\n      method:'POST',\n      body:JSON.stringify(movie),\n      headers:{\n        'Content-Type':'al=pplication/json'\n      }\n    })\n    const data=await response.json();\n    console.log(data);\n    \n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler}></AddMovie>\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={movies} />}\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && isError && <p>{isError}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}